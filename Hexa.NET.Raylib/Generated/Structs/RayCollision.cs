// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using System.Numerics;

namespace Hexa.NET.Raylib
{
	/// <summary>
	/// RayCollision, ray hit information<br/>
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "RayCollision")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct RayCollision
	{
		/// <summary>
		/// Did the ray hit something?<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "hit")]
		[NativeName(NativeNameType.Type, "bool")]
		public byte Hit;

		/// <summary>
		/// Distance to the nearest hit<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "distance")]
		[NativeName(NativeNameType.Type, "float")]
		public float Distance;

		/// <summary>
		/// Point of the nearest hit<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "point")]
		[NativeName(NativeNameType.Type, "Vector3")]
		public Vector3 Point;

		/// <summary>
		/// Surface normal of hit<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "normal")]
		[NativeName(NativeNameType.Type, "Vector3")]
		public Vector3 Normal;


		public unsafe RayCollision(bool hit = default, float distance = default, Vector3 point = default, Vector3 normal = default)
		{
			Hit = hit ? (byte)1 : (byte)0;
			Distance = distance;
			Point = point;
			Normal = normal;
		}


	}

}
