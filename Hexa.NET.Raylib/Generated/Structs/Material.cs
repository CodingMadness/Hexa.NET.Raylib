// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using System.Numerics;

namespace Hexa.NET.Raylib
{
	/// <summary>
	/// Material, includes shader and maps<br/>
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "Material")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct Material
	{
		/// <summary>
		/// Material shader<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "shader")]
		[NativeName(NativeNameType.Type, "Shader")]
		public Shader Shader;

		/// <summary>
		/// Material maps array (MAX_MATERIAL_MAPS)<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "maps")]
		[NativeName(NativeNameType.Type, "MaterialMap*")]
		public unsafe MaterialMap* Maps;

		/// <summary>
		/// Material generic parameters (if required)<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "params")]
		[NativeName(NativeNameType.Type, "float[4]")]
		public float Params_0;
		public float Params_1;
		public float Params_2;
		public float Params_3;


		public unsafe Material(Shader shader = default, MaterialMap* maps = default, float* @params = default)
		{
			Shader = shader;
			Maps = maps;
			if (@params != default(float*))
			{
				Params_0 = @params[0];
				Params_1 = @params[1];
				Params_2 = @params[2];
				Params_3 = @params[3];
			}
		}

		public unsafe Material(Shader shader = default, MaterialMap* maps = default, Span<float> @params = default)
		{
			Shader = shader;
			Maps = maps;
			if (@params != default(Span<float>))
			{
				Params_0 = @params[0];
				Params_1 = @params[1];
				Params_2 = @params[2];
				Params_3 = @params[3];
			}
		}


	}

}
