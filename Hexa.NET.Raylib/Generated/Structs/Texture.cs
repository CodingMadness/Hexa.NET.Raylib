// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using System.Numerics;

namespace Hexa.NET.Raylib
{
	/// <summary>
	/// Texture, tex data stored in GPU memory (VRAM)<br/>
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "Texture")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct Texture
	{
		/// <summary>
		/// OpenGL texture id<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "id")]
		[NativeName(NativeNameType.Type, "unsigned int")]
		public uint Id;

		/// <summary>
		/// Texture base width<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "width")]
		[NativeName(NativeNameType.Type, "int")]
		public int Width;

		/// <summary>
		/// Texture base height<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "height")]
		[NativeName(NativeNameType.Type, "int")]
		public int Height;

		/// <summary>
		/// Mipmap levels, 1 by default<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "mipmaps")]
		[NativeName(NativeNameType.Type, "int")]
		public int Mipmaps;

		/// <summary>
		/// Data format (PixelFormat type)<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "format")]
		[NativeName(NativeNameType.Type, "int")]
		public int Format;


		public unsafe Texture(uint id = default, int width = default, int height = default, int mipmaps = default, int format = default)
		{
			Id = id;
			Width = width;
			Height = height;
			Mipmaps = mipmaps;
			Format = format;
		}


	}

}
